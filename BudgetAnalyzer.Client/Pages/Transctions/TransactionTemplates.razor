@page "/transactionFileTemplates"
@using BudgetAnalyzer.Client.Data;
@using BudgetAnalyzer.Client.Data.Interfaces;
@using BudgetAnalyzer.Shared.Models;
@inject IDialogService DialogService
@inject ITransactionService transactionService;

<MudDataGrid Items="@TransactionMaps">
    <Columns>
        <PropertyColumn Property="x => x.Name"/>
        <PropertyColumn Property="x => x.TransactionDate" Title="Transaction Date"/>
        <PropertyColumn Property="x => x.Description" />
        <PropertyColumn Property="x => x.AmountPaid" Title="Amount Paid"/>
        <PropertyColumn Property="x => x.AmountReceived" Title="Amount Received"/>
        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
                <MudStack Row>
                    <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary">Edit</MudButton>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>
<br />
<MudButton @onclick="OpenDialog" Variant="Variant.Filled" Color="Color.Primary">
    Create Transaction Mapping
</MudButton>

@code {
    private List<string> _events = new();
    private IEnumerable<TransactionFileMapping> TransactionMaps = new List<TransactionFileMapping>();

    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<CreateTransactionDialog>("Simple Dialog", options);
    }

    protected override async Task OnInitializedAsync() => TransactionMaps = await transactionService.GetTransactionTemplates();
}
